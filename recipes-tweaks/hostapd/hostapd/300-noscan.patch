diff -ruN hostapd-2.6/hostapd/config_file.c hostapd-2.6.orig/hostapd/config_file.c
--- hostapd-2.6/hostapd/config_file.c	2016-10-02 20:51:11.000000000 +0200
+++ hostapd-2.6.orig/hostapd/config_file.c	2018-03-17 23:05:11.032723997 +0100
@@ -2863,6 +2863,10 @@
 		}
 #endif /* CONFIG_IEEE80211W */
 #ifdef CONFIG_IEEE80211N
+	} else if (os_strcmp(buf, "noscan") == 0) {
+		conf->noscan = atoi(pos);
+	} else if (os_strcmp(buf, "ht_coex") == 0) {
+		conf->no_ht_coex = !atoi(pos);
 	} else if (os_strcmp(buf, "ieee80211n") == 0) {
 		conf->ieee80211n = atoi(pos);
 	} else if (os_strcmp(buf, "ht_capab") == 0) {
diff -ruN hostapd-2.6/src/ap/ap_config.h hostapd-2.6.orig/src/ap/ap_config.h
--- hostapd-2.6/src/ap/ap_config.h	2016-10-02 20:51:11.000000000 +0200
+++ hostapd-2.6.orig/src/ap/ap_config.h	2018-03-17 23:04:30.697722861 +0100
@@ -664,6 +664,8 @@
 
 	int ht_op_mode_fixed;
 	u16 ht_capab;
+	int noscan;
+	int no_ht_coex;
 	int ieee80211n;
 	int secondary_channel;
 	int no_pri_sec_switch;
diff -ruN hostapd-2.6/src/ap/hw_features.c hostapd-2.6.orig/src/ap/hw_features.c
--- hostapd-2.6/src/ap/hw_features.c	2016-10-02 20:51:11.000000000 +0200
+++ hostapd-2.6.orig/src/ap/hw_features.c	2018-03-17 23:05:54.273725214 +0100
@@ -226,7 +226,7 @@
 {
 	int pri_chan, sec_chan;
 
-	if (!iface->conf->secondary_channel)
+	if (!iface->conf->secondary_channel || iface->conf->noscan)
 		return 1; /* HT40 not used */
 
 	pri_chan = iface->conf->channel;
diff -ruN hostapd-2.6/src/ap/ieee802_11_ht.c hostapd-2.6.orig/src/ap/ieee802_11_ht.c
--- hostapd-2.6/src/ap/ieee802_11_ht.c	2016-10-02 20:51:11.000000000 +0200
+++ hostapd-2.6.orig/src/ap/ieee802_11_ht.c	2018-03-17 23:08:20.303729325 +0100
@@ -244,6 +244,9 @@
 	if (!(iface->conf->ht_capab & HT_CAP_INFO_SUPP_CHANNEL_WIDTH_SET))
 		return;
 
+	if (iface->conf->noscan || iface->conf->no_ht_coex)
+		return;
+
 	if (len < IEEE80211_HDRLEN + 2 + sizeof(*bc_ie))
 		return;
 
@@ -368,6 +371,9 @@
 	if (iface->current_mode->mode != HOSTAPD_MODE_IEEE80211G)
 		return;
 
+	if (iface->conf->noscan || iface->conf->no_ht_coex)
+		return;
+
 	wpa_printf(MSG_INFO, "HT: Forty MHz Intolerant is set by STA " MACSTR
 		   " in Association Request", MAC2STR(sta->addr));
 
